<configuration>
    <!--spring配置映射-->
<!--    <springProperty scope="context" name="applicationName" source="spring.application.name"/>-->
<!--    <springProperty scope="context" name="mapperclasspath" source="mapper.classpath"/>-->
    <!--为了防止进程退出时，内存中的数据丢失，请加上此选项-->
    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoders are assigned the type
             ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
        <encoder>
            <pattern> %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %X{traceId} %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>
    <appender name="applog" class="com.fontana.log.producer.appender.AppLogAppender">
        <appName>test</appName>
        <logServ>http://192.168.8.133:8983</logServ>
    </appender>
    <appender name="requestLog" class="com.fontana.log.producer.appender.RequestLogAppender">
        <appName>test</appName>
        <logServ>http://192.168.8.133:8983</logServ>
    </appender>
    <!-- 可用来获取StatusManager中的状态 -->
    <statusListener class="ch.qos.logback.core.status.OnConsoleStatusListener"/>

    <!-- 解决debug模式下循环发送的问题 -->
    <logger name="org.apache.http.impl.conn.Wire" level="WARN" />
    <root level="info">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="applog"/>
    </root>
    <logger name="requestLog" level="info" additivity="false">
        <appender-ref ref="requestLog"/>
    </logger>
<!--    <logger name="${mapperclasspath}" level="debug" additivity="false">-->
<!--        <appender-ref ref="STDOUT" />-->
<!--        <appender-ref ref="applog"/>-->
<!--    </logger>-->
</configuration>