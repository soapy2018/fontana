/**
 * Copyright (c) 2020-2022 宁波哥爱帮科技有限公司
 */
package $!{package.Entity};

#set($voPackage=$package.Entity.replace("service","api").replace("entity","vo"))
import $!{voPackage}.$!{entity}VO;
import com.baomidou.mybatisplus.annotation.TableField;
import com.baomidou.mybatisplus.annotation.TableId;
import com.baomidou.mybatisplus.annotation.TableName;
import com.fontana.db.mapper.BaseModelMapper;
import com.fontana.db.model.BaseLogicDelModel;
#if($!{entityLombokModel})
import lombok.Data;
import lombok.EqualsAndHashCode;
#end
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

/**
 * $!{table.comment}实体类
 *
 * @author $!{author}
 * @since $!{date}
 */
#if($!{entityLombokModel})
@Data
#end
#if($!{superEntityClass})
@EqualsAndHashCode(callSuper = true)
#end
@TableName("$!{table.name}")
#if($!{superEntityClass})
public class $!{entity} extends $!{superEntityClass}#if($!{activeRecord})<$!{entity}>#end {
#elseif($!{activeRecord})
@Accessors(chain = true)
public class $!{entity} extends Model<$!{entity}> {
#else
public class $!{entity} implements Serializable {
#end

    private static final long serialVersionUID = 1L;

## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in $!{table.fields})
#if("$!field.name" != "create_user_id" && "$!field.name" != "update_user_id" && "$!field.name" != "create_time" && "$!field.name" != "update_time" && "$!field.name" != "deleted_flag")
#if("$!field.comment" != "")
    /**
     * $!{field.comment}
     */
#end
## 主键
#if($!{field.keyFlag})
#if($!{field.keyIdentityFlag})
    @TableId(value = "$!{field.name}", type = IdType.AUTO)
#elseif(!$null.isNull($!{idType}) && "$!idType" != "")
    @TableId(value = "$!{field.name}", type = IdType.$!{idType})
#else
    @TableId(value = "$!{field.name}")
#end
## 普通字段
#else
    @TableField(value = "$!{field.name}")
#end
    private $!{field.propertyType} $!{field.propertyName};
#end
#end
## ----------  END 字段循环遍历  ----------

    @Mapper
    public interface $!{entity}ModelMapper extends BaseModelMapper<$!{entity}VO, $!{entity}> {
    }

    public static final $!{entity}ModelMapper INSTANCE = Mappers.getMapper($!{entity}ModelMapper.class);

}
